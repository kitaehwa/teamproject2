<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.Init.mapper.MemberMapper">
	
	<!-- 시간정보 조회  -->
  	<select id="getTime" resultType="string">
  		select now()
  	</select>
	
	<!-- 회원가입 -->
	<insert id="insertMember">
		insert into employee(emp_id,emp_pw,emp_name,emp_birth,emp_gender,emp_tel,emp_email,emp_addr) 
		values(#{emp_id},#{emp_pw},#{emp_name},#{emp_birth},#{emp_gender},#{emp_tel},#{emp_email},#{emp_addr})
	</insert>
	
	<!-- 로그인 체크 -->
  	<select id="loginMember" resultType="MemberVO">
  		select * from employee 
  		where emp_id=#{emp_id} 
  		and emp_pw=#{emp_pw}
  	</select>
  	
  	<!-- 회원정보 조회 -->
  	<select id="getMember" resultType="MemberVO">
  		select * from employee
  		where emp_id=#{emp_id}
  	</select>
  	
  	<!-- 회원 정보 수정 -->
	<update id="updateMember">
	    update employee 
	    set emp_id=#{emp_id}, emp_name=#{emp_name}, emp_birth=#{emp_birth}, emp_gender=#{emp_gender}, emp_tel=#{emp_tel}, emp_email=#{emp_email},
	    emp_addr=#{emp_addr}, emp_dnum=#{emp_dnum}, emp_position=#{emp_position}, job=#{emp_job}, status=#{emp_status}, bnum=#{emp_bnum},
		emp_work_type=#{emp_work_type}, emp_bank_name=#{emp_bank_name}, emp_account_num=#{emp_account_num}, emp_account_name=#{emp_account_name}, emp_start_date=#{emp_start_date}	    
	     
	    where emp_id=#{emp_id}
	</update>

	<!-- 수정 이력 추가 -->
	<insert id="insertHisMember">
	    insert into his_employee (id, name, birth, gender, tel, email, addr, dnum, position, job, status, bnum,
	    work_type, bank_name, account_num, account_name, start_date, update_date) 
	    values (#{id}, #{name}, #{birth}, #{gender}, #{tel}, #{email}, #{addr}, #{dnum}, #{position}, #{job}, #{status}, 
	    #{bnum}, #{work_type}, #{bank_name}, #{account_num}, #{account_name}, #{start_date}, now())
	</insert>
  	
  	<!-- 회원정보 삭제  -->
  	<delete id="deleteMember">
  		delete from employee
  		where emp_id=#{emp_id} and emp_pw=#{emp_pw} 
  	
  	</delete>
  	
  	<!-- 회원정보 목록조회 -->
  	<select id="getMemberList" resultType="MemberVO">
  		select * from employee
  	</select>
  	
  	<!-- 계좌 정보 조회 -->
    <select id="getAccount" parameterType="String" resultType="AccountVO">
        SELECT emp_account_name, emp_account_num, emp_bank_name
        FROM employee
        WHERE emp_id = #{emp_id}
    </select>

    <!-- 자격증 정보 조회 -->
    <select id="getLicense" parameterType="String" resultType="LicenseVO">
        SELECT li_id, li_date
        FROM license
        WHERE emp_id = #{emp_id}
    </select>

    <!-- 교육이력 정보 조회 -->
    <select id="getHis_edu" parameterType="String" resultType="His_eduVO">
        SELECT eid, edate, end_date, estatus, approval
        FROM his_edu
        WHERE emp_id = #{emp_id}
    </select>

    <!-- 포상/징계 정보 조회 -->
    <select id="getReward" parameterType="String" resultType="RewardVO">
        SELECT rid, division, rname, reason, rdate
        FROM reward
        WHERE emp_id = #{emp_id}
    </select>

    <!-- 인사평가 정보 조회 -->
    <select id="getEval" parameterType="String" resultType="EvalVO">
        SELECT eval_id, score1, score2, score3, att, feedback, valuator, eval_date
        FROM eval
        WHERE emp_id = #{emp_id}
    </select>
	
</mapper>